# Generated by Django 4.1.7 on 2023-03-30 11:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency_id', models.TextField(blank=True, null=True)),
                ('agency_name', models.TextField(blank=True, null=True)),
                ('agency_url', models.TextField(blank=True, null=True)),
                ('agency_timezone', models.TextField(blank=True, null=True)),
                ('agency_lang', models.TextField(blank=True, null=True)),
                ('agency_phone', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.TextField(blank=True, null=True)),
                ('monday', models.TextField(blank=True, null=True)),
                ('tuesday', models.TextField(blank=True, null=True)),
                ('wednesday', models.TextField(blank=True, null=True)),
                ('thursday', models.TextField(blank=True, null=True)),
                ('friday', models.TextField(blank=True, null=True)),
                ('saturday', models.TextField(blank=True, null=True)),
                ('sunday', models.TextField(blank=True, null=True)),
                ('start_date', models.TextField(blank=True, null=True)),
                ('end_date', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarDates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.TextField(blank=True, null=True)),
                ('date', models.TextField(blank=True, null=True)),
                ('exception_type', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_dates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeedInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_publisher_name', models.TextField(blank=True, null=True)),
                ('feed_publisher_url', models.TextField(blank=True, null=True)),
                ('feed_lang', models.TextField(blank=True, null=True)),
                ('feed_version', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'feed_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_id', models.TextField(blank=True, null=True)),
                ('note_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Routes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_id', models.TextField(blank=True, null=True)),
                ('agency_id', models.TextField(blank=True, null=True)),
                ('route_short_name', models.TextField(blank=True, null=True)),
                ('route_long_name', models.TextField(blank=True, null=True)),
                ('route_desc', models.TextField(blank=True, null=True)),
                ('route_type', models.TextField(blank=True, null=True)),
                ('route_color', models.TextField(blank=True, null=True)),
                ('route_text_color', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'routes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shapes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shape_id', models.TextField(blank=True, null=True)),
                ('shape_pt_lat', models.TextField(blank=True, null=True)),
                ('shape_pt_lon', models.TextField(blank=True, null=True)),
                ('shape_pt_sequence', models.TextField(blank=True, null=True)),
                ('shape_dist_traveled', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'shapes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_id', models.TextField(blank=True, null=True)),
                ('stop_code', models.TextField(blank=True, null=True)),
                ('stop_name', models.TextField(blank=True, null=True)),
                ('stop_lat', models.TextField(blank=True, null=True)),
                ('stop_lon', models.TextField(blank=True, null=True)),
                ('location_type', models.TextField(blank=True, null=True)),
                ('parent_station', models.TextField(blank=True, null=True)),
                ('wheelchair_boarding', models.TextField(blank=True, null=True)),
                ('platform_code', models.TextField(blank=True, null=True)),
                ('stop_timezone', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stops',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StopTimes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_id', models.TextField(blank=True, null=True)),
                ('arrival_time', models.TextField(blank=True, null=True)),
                ('departure_time', models.TextField(blank=True, null=True)),
                ('stop_id', models.TextField(blank=True, null=True)),
                ('stop_sequence', models.TextField(blank=True, null=True)),
                ('stop_headsign', models.TextField(blank=True, null=True)),
                ('pickup_type', models.TextField(blank=True, null=True)),
                ('drop_off_type', models.TextField(blank=True, null=True)),
                ('timepoint', models.TextField(blank=True, null=True)),
                ('stop_note', models.TextField(blank=True, null=True)),
                ('shape_dist_traveled', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stop_times',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trips',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_id', models.TextField(blank=True, null=True)),
                ('service_id', models.TextField(blank=True, null=True)),
                ('trip_id', models.TextField(blank=True, null=True)),
                ('trip_headsign', models.TextField(blank=True, null=True)),
                ('trip_short_name', models.TextField(blank=True, null=True)),
                ('direction_id', models.TextField(blank=True, null=True)),
                ('block_id', models.TextField(blank=True, null=True)),
                ('shape_id', models.TextField(blank=True, null=True)),
                ('wheelchair_accessible', models.TextField(blank=True, null=True)),
                ('bikes_allowed', models.TextField(blank=True, null=True)),
                ('trip_note', models.TextField(blank=True, null=True)),
                ('route_direction', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trips',
                'managed': False,
            },
        ),
    ]
